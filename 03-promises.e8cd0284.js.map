{"mappings":"YAgBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAGnDA,E,IA3BMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAA+BC,EAAAF,EAAMG,cAAcC,SAA3Cf,EAAuBa,EAAvBb,MAAagB,GAAUH,EAAhBI,KAAgBJ,EAAVG,OAErBZ,YAAW,WACT,IAAK,IAAIc,EAAI,EAAGA,IAAMF,EAAMG,MAAOD,IACjCpB,EAAcC,SAAUC,E,IAExBA,EAAMmB,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const { delay, stop, amout } = event.currentTarget.elements;\n\n  setTimeout(() => {\n    for (let i = 1; i <= +amout.value; i++) {\n      createPromise(position, delay)\n    }\n  }, +delay.value)\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        // Reject\n      }\n    }, delay)\n  })\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","amout","stop","i","value"],"version":3,"file":"03-promises.e8cd0284.js.map"}