{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAE9BC,GADQF,SAASC,cAAc,qBACxBD,SAASC,cAAc,qBAC9BE,EAASH,SAASC,cAAc,sBAwBtC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAGnDA,E,IAjCPP,EAAKgB,iBAAiB,SAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IALA,IAA+BC,EAAAF,EAAMG,cAAcC,SAA3CC,EAAuBH,EAAvBI,MACJC,GAD2BL,EAAhBM,KAAgBN,EAAVO,MACJC,OAAOL,EAAMM,QAC1BC,EAAYF,OAAOxB,EAAKyB,OACxBE,EAAcH,OAAOvB,EAAOwB,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC1B,EAAc0B,EAAGP,GACdQ,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAU4B,EAAKD,EAALV,MACjBY,EAAArC,GAASsC,OAAOC,QAAQ,qBAAoCtB,OAAfT,EAAS,QAAYS,OAANmB,EAAM,M,IAEnEI,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUiC,EAAKN,EAALV,MAClBY,EAAArC,GAASsC,OAAOI,QAAQ,oBAAmCzB,OAAfT,EAAS,QAAYS,OAANwB,EAAM,M,IAErEf,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\n\nform.addEventListener('click', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, stop, amout } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    inputDelay += inputStep;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n        // Reject\n      }\n    }, delay);\n  });\n}\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","delay","inputDelay","stop","amout","Number","value","inputStep","inputAmount","i","then","param","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure"],"version":3,"file":"03-promises.6d58da15.js.map"}