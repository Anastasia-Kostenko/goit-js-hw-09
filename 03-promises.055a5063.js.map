{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAE9BC,GADQF,SAASC,cAAc,qBACxBD,SAASC,cAAc,qBAC9BE,EAASH,SAASC,cAAc,sBAuBtC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IA9BPP,EAAKgB,iBAAiB,SAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IALA,IAA+BC,EAAAF,EAAMG,cAAcC,SAA3CC,EAAuBH,EAAvBJ,MACJQ,GAD2BJ,EAAhBK,KAAgBL,EAAVM,MACJC,OAAOJ,EAAMK,QAC1BC,EAAYF,OAAOvB,EAAKwB,OACxBE,EAAcH,OAAOtB,EAAOuB,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCzB,EAAcyB,EAAGP,GACdQ,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAU2B,EAAKD,EAALjB,MACjBmB,EAAApC,GAASqC,OAAOC,QAAQ,qBAAoCC,OAAf/B,EAAS,QAAY+B,OAANJ,EAAM,M,IAEnEK,OAAM,SAAAN,G,IAAG1B,EAAQ0B,EAAR1B,SAAUiC,EAAKP,EAALjB,MAClBmB,EAAApC,GAASqC,OAAOK,QAAQ,oBAAmCH,OAAf/B,EAAS,QAAY+B,OAANE,EAAM,M,IAErEhB,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\n\nform.addEventListener('click', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, stop, amout } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    inputDelay += inputStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","inputDelay","stop","amout","Number","value","inputStep","inputAmount","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.055a5063.js.map"}